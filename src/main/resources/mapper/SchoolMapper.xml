<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="practice02_back.mapper.SchoolMapper">

    <select id="selectNameByAreaid" resultType="School" parameterType="int">
        select *
        from zhiyuan.school
        where areaid = #{areaid}
    </select>

    <select id="getSchoolByPro" resultType="Gaokao" parameterType="String">
        select distinct name, spname
        from zhiyuan.gaokao
        where spname like concat('%', #{proname}, '%')
        ORDER BY gaokao.rank
    </select>

    <select id="getSchoolByPid" resultType="Gaokao" parameterType="Integer">
        select distinct g.name,g.scid,p.proname
        from zhiyuan.gaokao g,
             zhiyuan.profession p
        where g.spname like concat('%', p.proname, '%')
          and p.pid = #{pid}
    </select>


    <resultMap id="getProBySchname" type="profession">
        <result property="proname" column="proname"/>
        <result property="timelength" column="timelength"/>
        <result property="sort" column="sort"/>
        <result property="pid" column="pid"/>
        <association property="gaokao" javaType="Gaokao">
            <result property="scid" column="scid"/>
            <result property="average" column="average"/>
            <result property="year" column="year"/>
            <result property="min" column="min"/>
            <result property="min_section" column="min_section"/>
            <result property="max" column="max"/>
            <result property="local_province_name" column="local_province_name"/>
            <result property="local_batch_name" column="local_batch_name"/>
            <result property="spname" column="spname"/>
            <result property="name" column="name"/>
            <result property="local_type_name" column="local_type_name"/>
            <result property="proscore" column="proscore"/>
            <result property="type" column="type"/>
        </association>
    </resultMap>

    <select id="getSchoolByName" resultMap="getProBySchname">

        select distinct pro.proname, g.*
        from zhiyuan.profession pro,
             zhiyuan.gaokao g
        where g.spname like concat('%', pro.proname, '%')
          and g.name = #{schoolName}
        GROUP BY pro.proname
    </select>


    <select id="findAllSchool" resultType="school">
        select *
        from zhiyuan.school
        <where>
            <if test="areaId != null and areaId[0] != -1 ">
                areaid in
                <foreach collection="areaId" item="areaId" open="(" separator="," close=")">
                    #{areaId}
                </foreach>
            </if>
            <if test="type != null and type != ''">
                and type=#{type}
            </if>
            <if test="is985 != null and is985 != ''">
                and is985 =#{is985}
            </if>
            <if test="is211 != null and is211 != ''">
                and is211=#{is211}
            </if>
            <if test="isdoublefirstclass != null">
                and isDoubleFirstClass=#{isdoublefirstclass}
            </if>
        </where>
        order by `rank`
        limit #{offset},#{size}

    </select>

    <select id="findAllSchoolByreid" resultType="school">
        select *
        from zhiyuan.school
        where reid = #{reid}
        order by `rank`
        limit #{offset},#{size}
    </select>


    <select id="findSchool" resultType="school">
        select *
        from zhiyuan.school
        where name = #{schoolname}
    </select>

    <select id="findSchoolByName" resultType="school">
        select *
        from zhiyuan.school
        where name = #{schoolname}
    </select>

    <select id="count" resultType="int">
        select count(1) from zhiyuan.school
        <where>
            <if test="areaId != null and areaId[0] != -1 ">
                areaid in
                <foreach collection="areaId" item="areaId" open="(" separator="," close=")">
                    #{areaId}
                </foreach>
            </if>
            <if test="type != null and type != ''">
                and type=#{type}
            </if>
            <if test="is985 != null and is985 != ''">
                and is985 =#{is985}
            </if>
            <if test="is211 != null and is211 != ''">
                and is211=#{is211}
            </if>
            <if test="isdoublefirstclass != null">
                and isDoubleFirstClass=#{isdoublefirstclass}
            </if>
        </where>
    </select>

    <select id="countByReid" resultType="Integer">
        select count(1) from zhiyuan.school where reid=#{reid}
    </select>


    <select id="findByScid" resultType="School">
        select *
        from school
        where scid = #{scid}
    </select>

    <select id="getProByScid" resultMap="getProByScid">
        select distinct pro.proname, g.*
        from zhiyuan.profession pro,
             zhiyuan.gaokao g
        where g.spname like concat('%', pro.proname, '%')
          and g.scid = #{scid}
        GROUP BY pro.proname
    </select>

    <resultMap id="getProByScid" type="profession">
        <result property="proname" column="proname"/>
        <result property="timelength" column="timelength"/>
        <result property="sort" column="sort"/>
        <result property="pid" column="pid"/>
        <association property="gaokao" javaType="Gaokao">
            <result property="scid" column="scid"/>
            <result property="average" column="average"/>
            <result property="year" column="year"/>
            <result property="min" column="min"/>
            <result property="min_section" column="min_section"/>
            <result property="max" column="max"/>
            <result property="local_province_name" column="local_province_name"/>
            <result property="local_batch_name" column="local_batch_name"/>
            <result property="spname" column="spname"/>
            <result property="name" column="name"/>
            <result property="local_type_name" column="local_type_name"/>
            <result property="proscore" column="proscore"/>
            <result property="type" column="type"/>
        </association>
    </resultMap>

</mapper>
